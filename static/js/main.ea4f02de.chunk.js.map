{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/searchbox/searchbox.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","Cardlist","Monsters","map","id","Searchbox","placeholder","handlechange","type","onChange","App","state","Searchfield","fetch","then","responce","json","users","setState","this","filteredmonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAEaA,EAAO,SAACC,GACjB,OACI,qBAAKC,UAAU,iBAAf,SACI,6BAAKD,EAAME,QAAQC,UCFlBC,EAAW,SAACJ,GACjB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMK,SAASC,KAAI,SAAAJ,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,UCL1BC,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACI,uBACAT,UAAU,SACVU,KAAK,SACLF,YAAaA,EACbG,SAAYF,QCyBTG,E,kDA7Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAc,IAJL,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAE1C,WAAS,IAAD,SAC0BE,KAAKR,MAA9BT,EADD,EACCA,SAAUU,EADX,EACWA,YAGXQ,EAAmBlB,EAASmB,QAAO,SAAAtB,GAAO,OAC9CA,EAAQC,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAKxB,UAAU,MAAf,UACE,kDACF,cAAC,EAAD,CAAYQ,YAAY,kBAAkBC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WACpG,cAAC,EAAD,CAAUxB,SAAUkB,W,GAzBRO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea4f02de.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.css\";\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <h1>{props.monster.name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport \"./card-list.css\";\r\nimport {Card} from \"../card/card.component\";\r\nexport const Cardlist = (props) => {\r\n        return (\r\n            <div className=\"card-list\">\r\n                {props.Monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport \"./searchbox.css\"\r\nexport const Searchbox = ({placeholder, handlechange}) => {\r\n    return (\r\n        <div >\r\n            <input \r\n            className=\"search\"\r\n            type=\"search\" \r\n            placeholder={placeholder}\r\n            onChange = {handlechange}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from \"react\";\r\nimport './App.css';\r\nimport  {Cardlist} from \"./components/card-list/card-list.component\";\r\nimport {Searchbox} from './components/searchbox/searchbox.component'\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      Monsters: [],\r\n      Searchfield : \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(responce => responce.json())\r\n    .then(users => this.setState({Monsters: users}))\r\n  }\r\n  render(){\r\n    const {Monsters, Searchfield} = this.state;\r\n    // const monsters = this.state.Monsters;\r\n    // const searchfield = this.state.SearchField\r\n    const filteredmonsters = Monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(Searchfield.toLowerCase())\r\n      )\r\n    return(\r\n      <div className=\"App\">\r\n        <h1>List of Monsters</h1>\r\n      <Searchbox  placeholder=\"Search Monsters\" handlechange={(e) => this.setState({Searchfield: e.target.value})}/>\r\n      <Cardlist Monsters={filteredmonsters}></Cardlist>\r\n    </div>\r\n    )}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}